{"version":3,"sources":["init.js","app.js","game-deck.js","game-play.js","game-start.js","gameboard.js","routing.js"],"names":["processHash","hash","location","app","router","run","slice","console","error","pageNotFound","Rlite","gameDeck","numPairs","swap","arr","x","y","tmp","shuffle","i","length","randomIndex","Math","floor","random","cards","split","concat","gamePlay","previousCard","$","on","log","twoCardsToCompare","card","this","cardCheckbox","find","unFlipped","prop","iconValue","text","hasClass","setTimeout","addClass","push","showGameStart","landingPage","html","landingPageTemplate","_","template","variable","showGameBoard","gameBoardPage","gameBoardPageTemplate","add","document","title","game","params","difficulty","window","addEventListener"],"mappings":"AAAA,QAAAA,eACA,GAAAC,GAAAC,SAAAD,MAAA,GAEAE,KAAAC,OAAAC,IAAAJ,EAAAK,MAAA,MACAC,QAAAC,MAAA,OACAL,IAAAM,gBCJA,GAAAN,OACAA,KAAAC,OAAAM,QCFAP,IAAAQ,SAAA,SAAAC,GAOA,QAAAC,GAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAH,EAAAC,EACAD,GAAAC,GAAAD,EAAAE,GACAF,EAAAE,GAAAC,EAGA,QAAAC,GAAAJ,GACA,IAAA,GAAAK,GAAA,EAAAA,EAAAL,EAAAM,SAAAD,EAAA,CACA,GAAAE,GAAAC,KAAAC,MAAAD,KAAAE,SAAAV,EAAAM,OACAP,GAAAC,EAAAK,EAAAE,GAGA,MAAAP,GAlBA,GAAAW,GAAA,mBAAAC,MAAA,IAAApB,MAAA,EAAAM,EAqBA,OAjBAa,GAAAA,EAAAE,OAAAF,GAiBAP,EAAAO,ICtBAtB,IAAAyB,SAAA,WAEA,GAAAC,KAEAC,GAAA,cAAAC,GAAA,QAAA,aAAA,WACAxB,QAAAyB,IAAA,UAAAH,EACA,IACAI,GADAC,EAAAJ,EAAAK,MAEAC,EAAAF,EAAAG,KAAA,aACAC,EAAAF,EAAAG,KAAA,WACAC,EAAAN,EAAAG,KAAA,cAAAI,MAiBA,OAXAR,GADAJ,EAAAT,OAAA,GACA,GAMA,EAKAa,IAAAK,GAAAJ,EAAAQ,SAAA,UASAT,GAAAK,IAAAJ,EAAAQ,SAAA,WAEAN,EAAAG,KAAA,WAAA,OAEAI,YAAA,WAkBA,MAfAH,KAAAX,EAAA,GAAAQ,KAAA,cAAAI,QAAA,KAAAD,GAGAN,EAAAU,SAAA,UACAf,EAAA,GAAAe,SAAA,UACAf,OAIAO,EAAAG,KAAA,WAAA,GACAV,EAAA,GAAAQ,KAAA,aAAAE,KAAA,WAAA,GACAV,OAIA,GACA,OAIA,GAhCAA,EAAAgB,KAAAX,GACAE,EAAAG,KAAA,WAAA,IACA,MCjCApC,IAAA2C,cAAA,WAEA,GAAAC,GAAAjB,EAAA,iBAAAkB,OACAC,EAAAC,EAAAC,SAAAJ,GAAAK,SAAA,KAEAtB,GAAA,cAAAkB,KAAAC,MCLA9C,IAAAkD,cAAA,WAEA,GAAAC,GAAAxB,EAAA,cAAAkB,OACAO,EAAAL,EAAAC,SAAAG,GAAAF,SAAA,KAEAjD,KAAAyB,WAEAE,EAAA,cAAAkB,KAAAO,GAEA9B,MAAAtB,IAAAQ,eCPAR,IAAAC,OAAAoD,IAAA,GAAA,WACAjD,QAAAyB,IAAA,SACAyB,SAAAC,MAAA,cACAvD,IAAA2C,kBAIA3C,IAAAC,OAAAoD,IAAA,mBAAA,SAAAG,GACAF,SAAAC,MAAA,cACAvD,IAAAkD,cAAAM,EAAAC,OAAAC,cNFAC,OAAAC,iBAAA,aAAA/D,aACAA","file":"app.js","sourcesContent":["function processHash() {\n    var hash = location.hash || '#';\n\n    if (!app.router.run(hash.slice(1))) {\n      console.error('404');\n      app.pageNotFound();\n    }\n  }\n\n  window.addEventListener('hashchange', processHash);\n  processHash();\n","// The namespace for this application\nvar app = {};\napp.router = Rlite();\n","app.gameDeck = function (numPairs) {\n  var cards = 'abcdefghijklmnop'.split('').slice(0, numPairs);\n\n  // Double my array, so ['a', 'b', 'c'] becomes\n  // ['a', 'b', 'c', 'a', 'b', 'c']\n  cards = cards.concat(cards);\n\n  function swap(arr, x, y) {\n    var tmp = arr[x];\n    arr[x] = arr[y];\n    arr[y] = tmp;\n  }\n\n  function shuffle(arr) {\n    for (var i = 0; i < arr.length; ++i) {\n      var randomIndex = Math.floor(Math.random() * arr.length);\n      swap(arr, i, randomIndex);\n    }\n\n    return arr;\n  }\n\n  return shuffle(cards);\n};\n","app.gamePlay = function() {\n\nvar previousCard = [];\n\n$('.container').on('click', '.game-tile', function(e){\nconsole.log(\"onClick\", previousCard);\n  var card = $(this);\n  var twoCardsToCompare;\n  var cardCheckbox = card.find(\".checkbox\");\n  var unFlipped = cardCheckbox.prop(\"checked\");\n  var iconValue = card.find('.game-icon').text();\n\n\n//if the array is greater than 0 then there are two cards to compare\n\n  if (previousCard.length > 0) {\n    twoCardsToCompare = true;\n\n//if the array is not greater than 0 then there are not two cards to compare\n\n  } else {\n\n    twoCardsToCompare = false;\n  }\n\n//if there are not two cards to compare and the chosen cards is unflipped\n\n  if ( !twoCardsToCompare && unFlipped && !card.hasClass('frozen')) {\n\n//add it to the array\n\n    previousCard.push(card);\n    cardCheckbox.prop(\"checked\", false);\n    return false;\n\n    //otherwise if there are two cards to compare\n  } else if (twoCardsToCompare && unFlipped && !card.hasClass('frozen')) {\n\n    cardCheckbox.prop(\"checked\", false);\n\n    setTimeout(function(){\n\n      //and if the value of their icon text is equal\n      if (iconValue === previousCard[0].find('.game-icon').text() && iconValue !== \"\") {\n\n        //add the class of frozen to each card\n        card.addClass(\"frozen\");\n        previousCard[0].addClass(\"frozen\");\n        previousCard = [];\n\n      } else {\n        // set both cards backed to unFlipped\n        cardCheckbox.prop(\"checked\", true);\n        previousCard[0].find('.checkbox').prop(\"checked\", true);\n        previousCard = [];\n      }\n        // empty out the previous card and return\n\n        return false;\n      }, 750);\n\n  } else {\n    // do nothing, ie., clicked on a card already flipped or a card already matched (frozen)\n    return false;\n\n  }\n\n});\n\n};\n","app.showGameStart = function() {\n\n  var landingPage = $('#landing-page').html();\n  var landingPageTemplate = _.template(landingPage, {variable: 'm'});\n\n  $('.container').html(landingPageTemplate());\n};\n","app.showGameBoard = function() {\n\n  var gameBoardPage = $('#gameBoard').html();\n  var gameBoardPageTemplate = _.template(gameBoardPage, {variable: 'm'});\n\n  app.gamePlay();\n\n  $('.container').html(gameBoardPageTemplate({\n\n    cards: app.gameDeck()\n  }));\n\n\n\n};\n","\n// Default route\napp.router.add('', function () {\n    console.log(\"hello\");\n    document.title = 'Memory Home';\n    app.showGameStart();\n\n});\n\napp.router.add('game/:difficulty', function (game) {\n    document.title = 'Memory Game';\n    app.showGameBoard(game.params.difficulty);\n});\n"],"sourceRoot":"/source/"}